type Contact {
  id: ID!
  name: String!
  email: String
  cell: String!
  profilePicPath: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelContactConnection {
  items: [Contact]!
  nextToken: String
}

input ModelContactFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  email: ModelStringInput
  cell: ModelStringInput
  profilePicPath: ModelStringInput
  and: [ModelContactFilterInput]
  or: [ModelContactFilterInput]
  not: ModelContactFilterInput
}

type Query {
  getContact(id: ID!): Contact
  listContacts(filter: ModelContactFilterInput, limit: Int, nextToken: String): ModelContactConnection
}

input ModelContactConditionInput {
  name: ModelStringInput
  email: ModelStringInput
  cell: ModelStringInput
  profilePicPath: ModelStringInput
  and: [ModelContactConditionInput]
  or: [ModelContactConditionInput]
  not: ModelContactConditionInput
}

input CreateContactInput {
  id: ID
  name: String!
  email: String
  cell: String!
  profilePicPath: String!
}

input UpdateContactInput {
  id: ID!
  name: String
  email: String
  cell: String
  profilePicPath: String
}

input DeleteContactInput {
  id: ID!
}

type Mutation {
  createContact(input: CreateContactInput!, condition: ModelContactConditionInput): Contact
  updateContact(input: UpdateContactInput!, condition: ModelContactConditionInput): Contact
  deleteContact(input: DeleteContactInput!, condition: ModelContactConditionInput): Contact
}

input ModelSubscriptionContactFilterInput {
  id: ModelSubscriptionIDInput
  name: ModelSubscriptionStringInput
  email: ModelSubscriptionStringInput
  cell: ModelSubscriptionStringInput
  profilePicPath: ModelSubscriptionStringInput
  and: [ModelSubscriptionContactFilterInput]
  or: [ModelSubscriptionContactFilterInput]
}

type Subscription {
  onCreateContact(filter: ModelSubscriptionContactFilterInput): Contact @aws_subscribe(mutations: ["createContact"])
  onUpdateContact(filter: ModelSubscriptionContactFilterInput): Contact @aws_subscribe(mutations: ["updateContact"])
  onDeleteContact(filter: ModelSubscriptionContactFilterInput): Contact @aws_subscribe(mutations: ["deleteContact"])
}
